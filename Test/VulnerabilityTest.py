#Unittest module to test Vulnerability class

import sys
sys.path.append('..\Src')

from Vulnerability import *
import unittest


class TestVulnerability(unittest.TestCase):

    #Setup a sample vulenrability for tests
    def setUp(self):
        self.v = Vulnerability(54523,'Title',90,'1900-01-01','Description','Location','AttackType','Impact','Solution','Exploit','Disclosure',None,'SpecificSolution','Credit','cvssBaseScore','cvssAccVec','cvssAccComp','cvssAuthen','cvssConfid','cvssInteg','cvssAvai')

    #Test the __str__ method    
    def test_toString(self):
        print(str(self.v))
        assert str(self.v) == '54523-Title-90-1900-01-01-Description-Location-AttackType-Impact-Solution-Exploit-Disclosure-None-SpecificSolution-Credit-cvssBaseScore-cvssAccVec-cvssAccComp-cvssAuthen-cvssConfid-cvssInteg-cvssAvai'

    #Tests the __eq__method    
    def test_equality(self):
        #create a duplicate of the inital vulnerability for checking
        vDuplicate = Vulnerability(54523,'Title',90,'1900-01-01','Description','Location','AttackType','Impact','Solution','Exploit','Disclosure',None,'SpecificSolution','Credit','cvssBaseScore','cvssAccVec','cvssAccComp','cvssAuthen','cvssConfid','cvssInteg','cvssAvai')
        boolean = self.v == vDuplicate
        assert boolean is True
        
    def tearDown(self):
        pass

    
if __name__=="__main__":
    #create test suite and run tests
    suite = unittest.makeSuite(TestVulnerability,'test')
    runner = unittest.TextTestRunner()
    runner.run(suite)
    
